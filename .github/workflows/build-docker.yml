name: Build, Push Image, and Update GitOps

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      gitops_repo:
        description: 'GitOps repository (format: org/repo)'
        required: true
        type: string
      image_name:
        description: 'Docker image name (format: username/image-name)'
        required: true
        type: string

concurrency:
  group: docker-image-build
  cancel-in-progress: false

jobs:
  build-and-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout app repo
        uses: actions/checkout@v4

      - name: Set image name
        id: image
        run: echo "value=${{ secrets.DOCKERHUB_USERNAME }}/$(basename ${{ github.repository }})" >> "$GITHUB_OUTPUT"

      - name: Fetch tags and calculate next version
        id: semver
        run: |
          git fetch --tags

          # Find latest semver tag (e.g., v1.2.3)
          latest_tag=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          echo "Latest tag: $latest_tag"

          if [ -z "$latest_tag" ]; then
            next_tag="v0.1.0"
          else
            major=$(echo $latest_tag | cut -d. -f1 | sed 's/v//')
            minor=$(echo $latest_tag | cut -d. -f2)
            patch=$(echo $latest_tag | cut -d. -f3)

            patch=$((patch + 1))
            next_tag="v${major}.${minor}.${patch}"
          fi

          echo "Next tag: $next_tag"
          echo "version=${next_tag}" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ steps.semver.outputs.version }} .
          docker push $IMAGE_NAME:${{ steps.semver.outputs.version }}

      - name: Clone GitOps repo
        run: |
          git clone https://x-access-token:${{ secrets.GITOPS_REPO_TOKEN }}@github.com/$GITOPS_REPO.git
          cd gitops-tournament-manager
          git config user.name "GitOps Bot"
          git config user.email "bot@github.com"

      - name: Update image tag in values.yaml
        run: |
          cd gitops-tournament-manager
          sed -i "s/^tag: .*/tag: \"${{ steps.semver.outputs.version }}\"/" helm-release/values.yaml

      - name: Create PR in GitOps repo
        run: |
          cd gitops-tournament-manager
          BRANCH="update-image-${{ steps.semver.outputs.version }}"
          git checkout -b $BRANCH
          git add helm-release/values.yaml
          git commit -m "Update image tag to ${{ steps.semver.outputs.version }}"
          git push origin $BRANCH

          # Create the PR
          gh pr create \
            --repo $GITOPS_REPO \
            --base $GITOPS_BRANCH \
            --head $BRANCH \
            --title "Update image tag to ${{ steps.semver.outputs.version }}" \
            --body "Automatically created by CI"
          
          # Merge the PR immediately
          gh pr merge \
            --repo $GITOPS_REPO \
            --delete-branch \
            --squash \
            --yes

      - name: Push Git tag
        run: |
          git config user.name "Builder Bot"
          git config user.email "builder@makoo.com"
          git tag ${{ steps.semver.outputs.version }}
          git push origin ${{ steps.semver.outputs.version }}

        env:
          GITHUB_TOKEN: ${{ secrets.GITOPS_REPO_TOKEN }}
